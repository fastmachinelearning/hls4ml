[build-system]
build-backend = "setuptools.build_meta"

requires = [ "setuptools>=61", "setuptools-scm>=8" ]

[project]
name = "hls4ml"
description = "Machine learning in FPGAs using HLS"
readme = "README.md"
license = { text = "Apache-2.0" }
authors = [ { name = "hls4ml Team" } ]
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: C++",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dynamic = [ "version" ]
dependencies = [ "h5py", "numpy", "pydigitalwavetools==1.1", "pyyaml" ]

optional-dependencies.doc = [
  "sphinx",
  "sphinx-contributors",
  "sphinx-github-changelog",
  "sphinx-rtd-theme",
]
optional-dependencies.hgq = [ "hgq>=0.2.3" ]
optional-dependencies.onnx = [ "onnx>=1.4" ]
optional-dependencies.optimization = [
  "keras-tuner==1.1.3",
  "ortools==9.4.1874",
  "packaging",
]
optional-dependencies.profiling = [ "matplotlib", "pandas", "seaborn" ]
optional-dependencies.qkeras = [
  "qkeras",
  "tensorflow>=2.8,<=2.14.1",
  "tensorflow-model-optimization<=0.7.5",
]
optional-dependencies.quartus-report = [ "calmjs-parse", "tabulate" ]
optional-dependencies.sr = [ "sympy>=1.13.1" ]
optional-dependencies.testing = [
  "calmjs-parse",
  "hgq>=0.2.3",
  "onnx>=1.4",
  "pytest",
  "pytest-cov",
  "pytest-randomly",
  "qonnx",
  "tabulate",
  "torch",
]
urls.Homepage = "https://fastmachinelearning.org/hls4ml"
scripts.hls4ml = "hls4ml.cli:main"
entry-points.pytest_randomly.random_seeder = "hls4ml:reseed"

[tool.setuptools]
packages = [ "hls4ml" ]
include-package-data = true

[tool.setuptools_scm]

version_scheme = "release-branch-semver"
git_describe_command = [
  "git",
  "describe",
  "--dirty",
  "--tags",
  "--long",
  "--match",
  "v*",
  "--first-parent",
]
write_to = "hls4ml/_version.py"

[tool.black]
line-length = 125
skip-string-normalization = true

[tool.isort]
profile = "black"
line_length = 125

[tool.check-manifest]
ignore = [
  ".github/**",
  "docs/**",
  ".pre-commit-config.yaml",
  "Jenkinsfile",
  "hls4ml/_version.py",
]
