.pytest:
  stage: test
  image: gitlab-registry.cern.ch/fastmachinelearning/hls4ml-testing:0.6.1.base
  tags:
    - k8s-default
  before_script:
    - echo "Starting before_script debugging..."
    - echo "Shell type is $SHELL"

    - eval "$(conda shell.bash hook)"
    - conda activate hls4ml-testing

    - echo "Updating git submodules..."
    - git submodule update --init --recursive hls4ml/templates/catapult/
    - if [ $EXAMPLEMODEL == 1 ]; then git submodule update --init example-models; fi
    - echo "Git submodules updated successfully."

    - echo "Checking Conda environment..."
    - conda info
    - echo "Activating Conda environment..."
    - conda activate hls4ml-testing
    - echo "Conda environment activated."

    - echo "Installing Python dependencies..."
    - pip install .[testing,sr,optimization]
  script:
    - cd test/pytest
    - pytest $PYTESTFILE -rA --cov-report xml --cov-report term --cov=hls4ml --junitxml=report.xml --randomly-seed=42 --randomly-dont-reorganize --randomly-dont-reset-seed
  artifacts:
    when: always
    reports:
      junit:
        - test/pytest/report.xml
      coverage_report:
        coverage_format: cobertura
        path: test/pytest/coverage.xml
    paths:
      - test/pytest/hls4mlprj*.tar.gz
